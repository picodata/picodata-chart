# Default values for picodata.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: docker.binary.picodata.io
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 'picodata:24.2.2'

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

nameOverride: ''
fullnameOverride: ''

router:
  # Instance vshard role
  role: router

  # Instance group
  group: router

  replicas: 2

  replicationFactor: 2

  podAnnotations: {}

  securityContext:
    # fsGroup: 2000
    # capabilities:
    #   drop:
    #   - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000

  service:
    type: ClusterIP
    ports:
      - name: binary
        protocol: TCP
        port: 3301
        targetPort: 3301
      - name: http
        protocol: TCP
        port: 8081
        targetPort: 8081

  ingress: {}
    # className: 'nginx'
    # annotations:
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: "true"
    # hosts:
    #   - host: picodata.router.local
    #     paths:
    #       - path: /
    #         pathType: ImplementationSpecific
    # tls: []
    #   - secretName: chart-example-tls
    #     hosts:
    #       - chart-example.local

  livenessProbe: {}
    # httpGet:
    #   path: /health
    #   port: http
  readinessProbe: {}
    # httpGet:
    #   path: /health
    #   port: http

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling: {}
    # minReplicas: 1
    # maxReplicas: 100
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: {}
    # - maxSkew: 1
    #   topologyKey: kubernetes.io/hostname
    #   whenUnsatisfiable: DoNotSchedule
    #   matchLabelKeys:
    #     - router

  env:
    - name: PICODATA_LOG_LEVEL
      value: info


storage:
  # Instance vshard role
  role: storage

  # Instance group
  group: storage

  replicas: 1

  replicationFactor: 1

  subdomain: storages

  podAnnotations: {}

  podSecurityContext:
    # fsGroup: 2000
    # capabilities:
    #   drop:
    #   - ALL
#    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000

  securityContext:
    fsGroup: 1000
    # capabilities:
    #   drop:
    #   - ALL
#    readOnlyRootFilesystem: true
#    runAsNonRoot: true
#    runAsUser: 1000
#    runAsGroup: 1000

  service:
    ports:
      - name: binary
        protocol: TCP
        port: 3301
        targetPort: 3301
      - name: http
        protocol: TCP
        port: 8081
        targetPort: 8081

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling: {}
    # enabled: false
    # minReplicas: 1
    # maxReplicas: 100
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: {}
    # - maxSkew: 1
    #   topologyKey: kubernetes.io/hostname
    #   whenUnsatisfiable: DoNotSchedule
    #   matchLabelKeys:
    #     - storage

  env:
    - name: PICODATA_LOG_LEVEL
      value: info

  volumes:
#    - name: tmpfs
#      emptyDir:
#        sizeLimit: 1Gi
#      mountPath: /pico
#      storageClassName: yc-network-ssd
#      accessModes:
#        - ReadWriteOnce
    - name: picodata
      volumeMode: Filesystem
      accessModes:
        - ReadWriteOnce
      mountPath: /pico
      storageClassName: yc-network-ssd
      size: 1Gi

  dataDir: /pico
