image:
  repository: docker.binary.picodata.io
  pullPolicy: IfNotPresent
  tag: 'picodata:master'

clusterName: picokube

picodata:

  instanceDir: /var/lib/picodata
  volumes:
    - name: picodata
      accessModes:
        - ReadWriteOnce
      mountPath: /var/lib/picodata
      storageClassName: yc-network-ssd

  service:
    type: ClusterIP
    ports:
      - name: binary
        protocol: TCP
        port: 3301
        targetPort: 3301
      - name: http
        protocol: TCP
        port: 8081
        targetPort: 8081
      - name: psql
        protocol: TCP
        port: 5432
        targetPort: 5432

  tiers:
    - tierName: default
      replicationFactor: 1
      replicas: 2
      canVote: true
      diskSize: 1Gi
      audit: null
      shredding: false
      memtx:
        memory: 128M
        checkpoint_count: 2
        checkpoint_interval: 3600.0
      vinyl:
        memory: 64M
        cache: 32M
      iproto:
        max_concurrent_messages: 76
      pg:
        ssl: false
      log:
        level: info
        destination: null
        format: plain
      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi

      env:
        - name: PICODATA_LOG_LEVEL
          value: info

      affinity: {}

      ingress:
        enabled: false
        className: 'nginx'
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: picodata.local
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls:
          - secretName: picodata-local-tls
            hosts:
              - picodata.local

  livenessProbe:
    tcpSocket:
      port: binary
    timeoutSeconds: 3
    periodSeconds: 20
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    tcpSocket:
      port: binary
    timeoutSeconds: 3
    periodSeconds: 20
    successThreshold: 1
    failureThreshold: 3
  startupProbe:
    tcpSocket:
      port: binary
    periodSeconds: 30
    failureThreshold: 20
    timeoutSeconds: 3

  nodeSelector: {}

  tolerations: []

  podAnnotations: {}

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000

  securityContext:
    fsGroup: 1000

  topologySpreadConstraints: {}

  autoscaling: {}

imagePullSecrets: []

serviceAccount:
  create: true
  annotations: {}
  name: ''
