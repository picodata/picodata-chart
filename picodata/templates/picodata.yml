apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "picodata.fullname" . }}
  namespace: {{ .Release.Namespace | default "default" }}
  labels:
    app.kubernetes.io/name: {{ include "picodata.fullname" . }}
    app.kubernetes.io/cluster: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{- if not .Values.picodata.autoscaling.enabled }}
  replicas: {{ .Values.picodata.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "picodata.fullname" . }}
  serviceName: {{ include "picodata.fullname" . }}-interconnect
  template:
    metadata:
      {{- with .Values.picodata.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "picodata.fullname" . }}
    spec:
      {{- with .Values.picodata.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "picodata.serviceAccountName" . }}
      containers:
        - name: {{ include "picodata.fullname" . }}
          image: {{ .Values.image.repository }}/{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          ports:
            {{- range $i, $value := .Values.picodata.service.ports }}
            - name: {{ $value.name }}
              containerPort: {{ $value.targetPort }}
              protocol: {{ $value.protocol }}
            {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_PORT
              value: {{ include "picodata.binaryTargetPort" . | quote }}
            - name: INSTANCE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: INSTANCE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PEER_URI
              value: {{ include "picodata.peerUri" . }}
            - name: ADVERTISE_URI
              value: {{ include "picodata.advertiseUri" . }}
            - name: PICODATA_DATA_DIR
              value: {{ .Values.picodata.dataDir }}
            - name: PICODATA_HTTP_LISTEN
              value: $(POD_IP):{{ include "picodata.httpTargetPort" . }}              
            {{- range .Values.picodata.env }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
          {{- with .Values.picodata.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.picodata.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.picodata.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.picodata.volumes }}
          volumeMounts:
            {{- range .Values.picodata.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
          {{- end }}
          dnsConfig:
            searches:
              - $(INSTANCE_NAME)
      {{- with .Values.picodata.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.picodata.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.picodata.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.picodata.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.picodata.volumes }}
  volumeClaimTemplates:
    {{- range .Values.picodata.volumes }}
    - metadata:
        name: {{ .name | default "pvc" }}
        namespace: {{ $.Release.Namespace | default "default" }}
      spec:
        {{- if .storageClassName }}
        storageClassName: {{ .storageClassName }}
        {{- end }}
        {{- with .accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .volumeMode }}
        volumeMode: {{ .volumeMode }}
        {{- end }}
        resources:
          requests:
            storage: {{ .size | default "1Gi" }}
    {{- end }}
  {{- end }}
